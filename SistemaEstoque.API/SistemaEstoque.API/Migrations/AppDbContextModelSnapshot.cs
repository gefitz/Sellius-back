// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Sellius.API.Context;

#nullable disable

namespace Sellius.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Sellius.API.Models.CidadeModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("EstadoId")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("EstadoId");

                    b.ToTable("Cidades");
                });

            modelBuilder.Entity("Sellius.API.Models.Cliente.ClienteModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CidadeId")
                        .HasColumnType("integer");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("dthNascimeto")
                        .HasColumnType("timestamp with time zone");

                    b.Property<short>("fAtivo")
                        .HasColumnType("smallint");

                    b.Property<int>("idGrupo")
                        .HasColumnType("integer");

                    b.Property<int>("idSegmentacao")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("CidadeId");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("idGrupo");

                    b.HasIndex("idSegmentacao");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Sellius.API.Models.Cliente.GrupoClienteModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<DateTime>("dthAlteracao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("dthCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<short>("fAtivo")
                        .HasColumnType("smallint");

                    b.Property<int>("idEmpresa")
                        .HasColumnType("integer");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Grupo");

                    b.HasKey("id");

                    b.HasIndex("idEmpresa");

                    b.ToTable("Cliente_Grupos");
                });

            modelBuilder.Entity("Sellius.API.Models.Cliente.SegmentacaoModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("Segmento")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("dthAlteracao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("dthCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<short>("fAtivo")
                        .HasColumnType("smallint");

                    b.Property<int>("idEmpresa")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("idEmpresa");

                    b.ToTable("Segmentacaoes");
                });

            modelBuilder.Entity("Sellius.API.Models.EmpresaModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CidadeId")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("LicencaId")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("dthAlteracao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("dthCadastro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<short>("fAtivo")
                        .HasColumnType("smallint");

                    b.HasKey("id");

                    b.HasIndex("CidadeId");

                    b.HasIndex("LicencaId");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("Sellius.API.Models.EstadoModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("Estados");
                });

            modelBuilder.Entity("Sellius.API.Models.FornecedoresModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CidadeId")
                        .HasColumnType("integer");

                    b.Property<string>("Complemento")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("dthAlteracao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("dthCadastro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<short>("fAtivo")
                        .HasColumnType("smallint");

                    b.HasKey("id");

                    b.HasIndex("CidadeId");

                    b.HasIndex("EmpresaId");

                    b.ToTable("Fornecedores");
                });

            modelBuilder.Entity("Sellius.API.Models.LicencaModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<Guid>("Licenca")
                        .HasColumnType("uuid");

                    b.Property<int>("TipoLincenca")
                        .HasColumnType("integer");

                    b.Property<int>("UsuairosIncluirFree")
                        .HasColumnType("integer");

                    b.Property<int>("UsuariosIncluidos")
                        .HasColumnType("integer");

                    b.Property<decimal>("ValorMensal")
                        .HasColumnType("numeric");

                    b.Property<decimal>("ValorPorUsuario")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("dthInicioLincenca")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("dthVencimento")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("id");

                    b.ToTable("Licencas");
                });

            modelBuilder.Entity("Sellius.API.Models.LogModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("InnerExecption")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Messagem")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("dthErro")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("id");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("Sellius.API.Models.LoginModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.Property<byte[]>("Hash")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<byte[]>("Salt")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<int>("TipoUsuario")
                        .HasColumnType("integer");

                    b.Property<bool>("fEmailConfirmado")
                        .HasColumnType("boolean");

                    b.Property<int?>("usuarioId")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("usuarioId");

                    b.ToTable("Logins");
                });

            modelBuilder.Entity("Sellius.API.Models.PedidoModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("integer");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.Property<short>("Finalizado")
                        .HasColumnType("smallint");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("dthPedido")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("qtd")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("Sellius.API.Models.PedidoXProduto", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<float>("ValorVenda")
                        .HasColumnType("real");

                    b.Property<int>("idPedido")
                        .HasColumnType("integer");

                    b.Property<int>("idProduto")
                        .HasColumnType("integer");

                    b.Property<int>("qtd")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("idPedido");

                    b.HasIndex("idProduto");

                    b.ToTable("PedidoXProdutos");
                });

            modelBuilder.Entity("Sellius.API.Models.ProdutoModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.Property<int>("FornecedorId")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TipoProdutoId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("dthAlteracao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("dthCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("fAtivo")
                        .HasColumnType("integer");

                    b.Property<int>("qtd")
                        .HasColumnType("integer");

                    b.Property<decimal>("valor")
                        .HasColumnType("numeric");

                    b.HasKey("id");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("FornecedorId");

                    b.HasIndex("TipoProdutoId");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("Sellius.API.Models.TipoProdutoModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Empresaid")
                        .HasColumnType("integer");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<short>("fAtivo")
                        .HasColumnType("smallint");

                    b.HasKey("id");

                    b.HasIndex("Empresaid");

                    b.ToTable("TpProdutos");
                });

            modelBuilder.Entity("Sellius.API.Models.UsuarioModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CidadeId")
                        .HasColumnType("integer");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TipoUsuario")
                        .HasColumnType("integer");

                    b.Property<DateTime>("dthCadastro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<short>("fAtivo")
                        .HasColumnType("smallint");

                    b.HasKey("id");

                    b.HasIndex("CidadeId");

                    b.HasIndex("EmpresaId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Sellius.API.Models.CidadeModel", b =>
                {
                    b.HasOne("Sellius.API.Models.EstadoModel", "Estado")
                        .WithMany("Cidade")
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("Sellius.API.Models.Cliente.ClienteModel", b =>
                {
                    b.HasOne("Sellius.API.Models.CidadeModel", "Cidade")
                        .WithMany()
                        .HasForeignKey("CidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sellius.API.Models.EmpresaModel", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sellius.API.Models.Cliente.GrupoClienteModel", "Grupo")
                        .WithMany()
                        .HasForeignKey("idGrupo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sellius.API.Models.Cliente.SegmentacaoModel", "segmentacao")
                        .WithMany()
                        .HasForeignKey("idSegmentacao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cidade");

                    b.Navigation("Empresa");

                    b.Navigation("Grupo");

                    b.Navigation("segmentacao");
                });

            modelBuilder.Entity("Sellius.API.Models.Cliente.GrupoClienteModel", b =>
                {
                    b.HasOne("Sellius.API.Models.EmpresaModel", "Empresa")
                        .WithMany()
                        .HasForeignKey("idEmpresa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("Sellius.API.Models.Cliente.SegmentacaoModel", b =>
                {
                    b.HasOne("Sellius.API.Models.EmpresaModel", "Empresa")
                        .WithMany()
                        .HasForeignKey("idEmpresa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("Sellius.API.Models.EmpresaModel", b =>
                {
                    b.HasOne("Sellius.API.Models.CidadeModel", "Cidade")
                        .WithMany()
                        .HasForeignKey("CidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sellius.API.Models.LicencaModel", "Licenca")
                        .WithMany()
                        .HasForeignKey("LicencaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cidade");

                    b.Navigation("Licenca");
                });

            modelBuilder.Entity("Sellius.API.Models.FornecedoresModel", b =>
                {
                    b.HasOne("Sellius.API.Models.CidadeModel", "Cidade")
                        .WithMany()
                        .HasForeignKey("CidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sellius.API.Models.EmpresaModel", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cidade");

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("Sellius.API.Models.LoginModel", b =>
                {
                    b.HasOne("Sellius.API.Models.EmpresaModel", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sellius.API.Models.UsuarioModel", "Usuario")
                        .WithMany()
                        .HasForeignKey("usuarioId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Empresa");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Sellius.API.Models.PedidoModel", b =>
                {
                    b.HasOne("Sellius.API.Models.Cliente.ClienteModel", "Cliente")
                        .WithMany("Pedidos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sellius.API.Models.EmpresaModel", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sellius.API.Models.UsuarioModel", "Usuario")
                        .WithMany("Pedidos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Empresa");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Sellius.API.Models.PedidoXProduto", b =>
                {
                    b.HasOne("Sellius.API.Models.PedidoModel", "Pedido")
                        .WithMany("Produto")
                        .HasForeignKey("idPedido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sellius.API.Models.ProdutoModel", "Produto")
                        .WithMany("pedidos")
                        .HasForeignKey("idProduto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pedido");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Sellius.API.Models.ProdutoModel", b =>
                {
                    b.HasOne("Sellius.API.Models.EmpresaModel", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sellius.API.Models.FornecedoresModel", "Fornecedor")
                        .WithMany()
                        .HasForeignKey("FornecedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sellius.API.Models.TipoProdutoModel", "tipoProduto")
                        .WithMany("Produtos")
                        .HasForeignKey("TipoProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");

                    b.Navigation("Fornecedor");

                    b.Navigation("tipoProduto");
                });

            modelBuilder.Entity("Sellius.API.Models.TipoProdutoModel", b =>
                {
                    b.HasOne("Sellius.API.Models.EmpresaModel", "Empresa")
                        .WithMany()
                        .HasForeignKey("Empresaid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("Sellius.API.Models.UsuarioModel", b =>
                {
                    b.HasOne("Sellius.API.Models.CidadeModel", "Cidade")
                        .WithMany()
                        .HasForeignKey("CidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sellius.API.Models.EmpresaModel", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cidade");

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("Sellius.API.Models.Cliente.ClienteModel", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("Sellius.API.Models.EstadoModel", b =>
                {
                    b.Navigation("Cidade");
                });

            modelBuilder.Entity("Sellius.API.Models.PedidoModel", b =>
                {
                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Sellius.API.Models.ProdutoModel", b =>
                {
                    b.Navigation("pedidos");
                });

            modelBuilder.Entity("Sellius.API.Models.TipoProdutoModel", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("Sellius.API.Models.UsuarioModel", b =>
                {
                    b.Navigation("Pedidos");
                });
#pragma warning restore 612, 618
        }
    }
}
