// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Sellius.API.Context;

#nullable disable

namespace Sellius.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250917230952_Sellius")]
    partial class Sellius
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Sellius.API.Models.CidadeModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("cidade");

                    b.Property<int>("EstadoId")
                        .HasColumnType("integer")
                        .HasColumnName("estado_id");

                    b.HasKey("id")
                        .HasName("pk_cidades");

                    b.HasIndex("EstadoId")
                        .HasDatabaseName("ix_cidades_estado_id");

                    b.ToTable("cidades", (string)null);
                });

            modelBuilder.Entity("Sellius.API.Models.Cliente.ClienteModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("bairro");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("cep");

                    b.Property<int>("CidadeId")
                        .HasColumnType("integer")
                        .HasColumnName("cidade_id");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("documento");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer")
                        .HasColumnName("empresa_id");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("rua");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("telefone");

                    b.Property<DateTime>("dthNascimeto")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("dth_nascimeto");

                    b.Property<short>("fAtivo")
                        .HasColumnType("smallint")
                        .HasColumnName("f_ativo");

                    b.Property<int>("idGrupo")
                        .HasColumnType("integer")
                        .HasColumnName("id_grupo");

                    b.Property<int>("idSegmentacao")
                        .HasColumnType("integer")
                        .HasColumnName("id_segmentacao");

                    b.HasKey("id")
                        .HasName("pk_clientes");

                    b.HasIndex("CidadeId")
                        .HasDatabaseName("ix_clientes_cidade_id");

                    b.HasIndex("EmpresaId")
                        .HasDatabaseName("ix_clientes_empresa_id");

                    b.HasIndex("idGrupo")
                        .HasDatabaseName("ix_clientes_id_grupo");

                    b.HasIndex("idSegmentacao")
                        .HasDatabaseName("ix_clientes_id_segmentacao");

                    b.ToTable("clientes", (string)null);
                });

            modelBuilder.Entity("Sellius.API.Models.Cliente.GrupoClienteModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<DateTime>("dthAlteracao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("dth_alteracao");

                    b.Property<DateTime>("dthCriacao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("dth_criacao");

                    b.Property<short>("fAtivo")
                        .HasColumnType("smallint")
                        .HasColumnName("f_ativo");

                    b.Property<int>("idEmpresa")
                        .HasColumnType("integer")
                        .HasColumnName("id_empresa");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Grupo");

                    b.HasKey("id")
                        .HasName("pk_cliente_grupos");

                    b.HasIndex("idEmpresa")
                        .HasDatabaseName("ix_cliente_grupos_id_empresa");

                    b.ToTable("Cliente_Grupos");
                });

            modelBuilder.Entity("Sellius.API.Models.Cliente.SegmentacaoModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("Segmento")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("segmento");

                    b.Property<DateTime>("dthAlteracao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("dth_alteracao");

                    b.Property<DateTime>("dthCriacao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("dth_criacao");

                    b.Property<short>("fAtivo")
                        .HasColumnType("smallint")
                        .HasColumnName("f_ativo");

                    b.Property<int>("idEmpresa")
                        .HasColumnType("integer")
                        .HasColumnName("id_empresa");

                    b.HasKey("id")
                        .HasName("pk_segmentacaoes");

                    b.HasIndex("idEmpresa")
                        .HasDatabaseName("ix_segmentacaoes_id_empresa");

                    b.ToTable("Segmentacaoes");
                });

            modelBuilder.Entity("Sellius.API.Models.EmpresaModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("cep");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("cnpj");

                    b.Property<int>("CidadeId")
                        .HasColumnType("integer")
                        .HasColumnName("cidade_id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<int>("LicencaId")
                        .HasColumnType("integer")
                        .HasColumnName("licenca_id");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("rua");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("telefone");

                    b.Property<DateTime>("dthAlteracao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("dth_alteracao");

                    b.Property<DateTime>("dthCadastro")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("dth_cadastro");

                    b.Property<short>("fAtivo")
                        .HasColumnType("smallint")
                        .HasColumnName("f_ativo");

                    b.HasKey("id")
                        .HasName("pk_empresas");

                    b.HasIndex("CidadeId")
                        .HasDatabaseName("ix_empresas_cidade_id");

                    b.HasIndex("LicencaId")
                        .HasDatabaseName("ix_empresas_licenca_id");

                    b.ToTable("empresas", (string)null);
                });

            modelBuilder.Entity("Sellius.API.Models.EstadoModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("estado");

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("sigla");

                    b.HasKey("id")
                        .HasName("pk_estados");

                    b.ToTable("estados", (string)null);
                });

            modelBuilder.Entity("Sellius.API.Models.FornecedoresModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("cep");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("cnpj");

                    b.Property<int>("CidadeId")
                        .HasColumnType("integer")
                        .HasColumnName("cidade_id");

                    b.Property<string>("Complemento")
                        .HasColumnType("text")
                        .HasColumnName("complemento");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer")
                        .HasColumnName("empresa_id");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("rua");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("telefone");

                    b.Property<DateTime>("dthAlteracao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("dth_alteracao");

                    b.Property<DateTime>("dthCadastro")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("dth_cadastro");

                    b.Property<short>("fAtivo")
                        .HasColumnType("smallint")
                        .HasColumnName("f_ativo");

                    b.HasKey("id")
                        .HasName("pk_fornecedores");

                    b.HasIndex("CidadeId")
                        .HasDatabaseName("ix_fornecedores_cidade_id");

                    b.HasIndex("EmpresaId")
                        .HasDatabaseName("ix_fornecedores_empresa_id");

                    b.ToTable("fornecedores", (string)null);
                });

            modelBuilder.Entity("Sellius.API.Models.LicencaModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<Guid>("Licenca")
                        .HasColumnType("uuid")
                        .HasColumnName("licenca");

                    b.Property<int>("TipoLincenca")
                        .HasColumnType("integer")
                        .HasColumnName("tipo_lincenca");

                    b.Property<int>("UsuairosIncluirFree")
                        .HasColumnType("integer")
                        .HasColumnName("usuairos_incluir_free");

                    b.Property<int>("UsuariosIncluidos")
                        .HasColumnType("integer")
                        .HasColumnName("usuarios_incluidos");

                    b.Property<decimal>("ValorMensal")
                        .HasColumnType("numeric")
                        .HasColumnName("valor_mensal");

                    b.Property<decimal>("ValorPorUsuario")
                        .HasColumnType("numeric")
                        .HasColumnName("valor_por_usuario");

                    b.Property<DateTime>("dthInicioLincenca")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("dth_inicio_lincenca");

                    b.Property<DateTime>("dthVencimento")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("dth_vencimento");

                    b.HasKey("id")
                        .HasName("pk_licencas");

                    b.ToTable("licencas", (string)null);
                });

            modelBuilder.Entity("Sellius.API.Models.LogModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("InnerExecption")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("inner_execption");

                    b.Property<string>("Messagem")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("messagem");

                    b.Property<DateTime>("dthErro")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("dth_erro");

                    b.HasKey("id")
                        .HasName("pk_logs");

                    b.ToTable("logs", (string)null);
                });

            modelBuilder.Entity("Sellius.API.Models.LoginModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer")
                        .HasColumnName("empresa_id");

                    b.Property<byte[]>("Hash")
                        .IsRequired()
                        .HasColumnType("bytea")
                        .HasColumnName("hash");

                    b.Property<byte[]>("Salt")
                        .IsRequired()
                        .HasColumnType("bytea")
                        .HasColumnName("salt");

                    b.Property<int>("TipoUsuario")
                        .HasColumnType("integer")
                        .HasColumnName("tipo_usuario");

                    b.Property<bool>("fEmailConfirmado")
                        .HasColumnType("boolean")
                        .HasColumnName("f_email_confirmado");

                    b.Property<int?>("usuarioId")
                        .HasColumnType("integer")
                        .HasColumnName("usuario_id");

                    b.HasKey("id")
                        .HasName("pk_logins");

                    b.HasIndex("EmpresaId")
                        .HasDatabaseName("ix_logins_empresa_id");

                    b.HasIndex("usuarioId")
                        .HasDatabaseName("ix_logins_usuario_id");

                    b.ToTable("logins", (string)null);
                });

            modelBuilder.Entity("Sellius.API.Models.PedidoModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("integer")
                        .HasColumnName("cliente_id");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer")
                        .HasColumnName("empresa_id");

                    b.Property<short>("Finalizado")
                        .HasColumnType("smallint")
                        .HasColumnName("finalizado");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer")
                        .HasColumnName("usuario_id");

                    b.Property<DateTime>("dthPedido")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("dth_pedido");

                    b.Property<int>("qtd")
                        .HasColumnType("integer")
                        .HasColumnName("qtd");

                    b.HasKey("id")
                        .HasName("pk_pedidos");

                    b.HasIndex("ClienteId")
                        .HasDatabaseName("ix_pedidos_cliente_id");

                    b.HasIndex("EmpresaId")
                        .HasDatabaseName("ix_pedidos_empresa_id");

                    b.HasIndex("UsuarioId")
                        .HasDatabaseName("ix_pedidos_usuario_id");

                    b.ToTable("pedidos", (string)null);
                });

            modelBuilder.Entity("Sellius.API.Models.PedidoXProduto", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<float>("ValorVenda")
                        .HasColumnType("real")
                        .HasColumnName("valor_venda");

                    b.Property<int>("idPedido")
                        .HasColumnType("integer")
                        .HasColumnName("id_pedido");

                    b.Property<int>("idProduto")
                        .HasColumnType("integer")
                        .HasColumnName("id_produto");

                    b.Property<int>("qtd")
                        .HasColumnType("integer")
                        .HasColumnName("qtd");

                    b.HasKey("id")
                        .HasName("pk_pedido_x_produtos");

                    b.HasIndex("idPedido")
                        .HasDatabaseName("ix_pedido_x_produtos_id_pedido");

                    b.HasIndex("idProduto")
                        .HasDatabaseName("ix_pedido_x_produtos_id_produto");

                    b.ToTable("pedido_x_produtos", (string)null);
                });

            modelBuilder.Entity("Sellius.API.Models.ProdutoModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("descricao");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer")
                        .HasColumnName("empresa_id");

                    b.Property<int>("FornecedorId")
                        .HasColumnType("integer")
                        .HasColumnName("fornecedor_id");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.Property<int>("TipoProdutoId")
                        .HasColumnType("integer")
                        .HasColumnName("tipo_produto_id");

                    b.Property<DateTime>("dthAlteracao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("dth_alteracao");

                    b.Property<DateTime>("dthCriacao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("dth_criacao");

                    b.Property<int>("fAtivo")
                        .HasColumnType("integer")
                        .HasColumnName("f_ativo");

                    b.Property<int>("qtd")
                        .HasColumnType("integer")
                        .HasColumnName("qtd");

                    b.Property<decimal>("valor")
                        .HasColumnType("numeric")
                        .HasColumnName("valor");

                    b.HasKey("id")
                        .HasName("pk_produtos");

                    b.HasIndex("EmpresaId")
                        .HasDatabaseName("ix_produtos_empresa_id");

                    b.HasIndex("FornecedorId")
                        .HasDatabaseName("ix_produtos_fornecedor_id");

                    b.HasIndex("TipoProdutoId")
                        .HasDatabaseName("ix_produtos_tipo_produto_id");

                    b.ToTable("produtos", (string)null);
                });

            modelBuilder.Entity("Sellius.API.Models.TipoProdutoModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("descricao");

                    b.Property<int>("Empresaid")
                        .HasColumnType("integer")
                        .HasColumnName("empresaid");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("tipo");

                    b.Property<short>("fAtivo")
                        .HasColumnType("smallint")
                        .HasColumnName("f_ativo");

                    b.HasKey("id")
                        .HasName("pk_tp_produtos");

                    b.HasIndex("Empresaid")
                        .HasDatabaseName("ix_tp_produtos_empresaid");

                    b.ToTable("tp_produtos", (string)null);
                });

            modelBuilder.Entity("Sellius.API.Models.UsuarioModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("cep");

                    b.Property<int>("CidadeId")
                        .HasColumnType("integer")
                        .HasColumnName("cidade_id");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("documento");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer")
                        .HasColumnName("empresa_id");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("rua");

                    b.Property<int>("TipoUsuario")
                        .HasColumnType("integer")
                        .HasColumnName("tipo_usuario");

                    b.Property<DateTime>("dthCadastro")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("dth_cadastro");

                    b.Property<short>("fAtivo")
                        .HasColumnType("smallint")
                        .HasColumnName("f_ativo");

                    b.HasKey("id")
                        .HasName("pk_usuarios");

                    b.HasIndex("CidadeId")
                        .HasDatabaseName("ix_usuarios_cidade_id");

                    b.HasIndex("EmpresaId")
                        .HasDatabaseName("ix_usuarios_empresa_id");

                    b.ToTable("usuarios", (string)null);
                });

            modelBuilder.Entity("Sellius.API.Models.CidadeModel", b =>
                {
                    b.HasOne("Sellius.API.Models.EstadoModel", "Estado")
                        .WithMany("Cidade")
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_cidades_estados_estado_id");

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("Sellius.API.Models.Cliente.ClienteModel", b =>
                {
                    b.HasOne("Sellius.API.Models.CidadeModel", "Cidade")
                        .WithMany()
                        .HasForeignKey("CidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_clientes_cidades_cidade_id");

                    b.HasOne("Sellius.API.Models.EmpresaModel", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_clientes_empresas_empresa_id");

                    b.HasOne("Sellius.API.Models.Cliente.GrupoClienteModel", "Grupo")
                        .WithMany()
                        .HasForeignKey("idGrupo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_clientes_cliente_grupos_id_grupo");

                    b.HasOne("Sellius.API.Models.Cliente.SegmentacaoModel", "segmentacao")
                        .WithMany()
                        .HasForeignKey("idSegmentacao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_clientes_segmentacaoes_id_segmentacao");

                    b.Navigation("Cidade");

                    b.Navigation("Empresa");

                    b.Navigation("Grupo");

                    b.Navigation("segmentacao");
                });

            modelBuilder.Entity("Sellius.API.Models.Cliente.GrupoClienteModel", b =>
                {
                    b.HasOne("Sellius.API.Models.EmpresaModel", "Empresa")
                        .WithMany()
                        .HasForeignKey("idEmpresa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_cliente_grupos_empresas_id_empresa");

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("Sellius.API.Models.Cliente.SegmentacaoModel", b =>
                {
                    b.HasOne("Sellius.API.Models.EmpresaModel", "Empresa")
                        .WithMany()
                        .HasForeignKey("idEmpresa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_segmentacaoes_empresas_id_empresa");

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("Sellius.API.Models.EmpresaModel", b =>
                {
                    b.HasOne("Sellius.API.Models.CidadeModel", "Cidade")
                        .WithMany()
                        .HasForeignKey("CidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_empresas_cidades_cidade_id");

                    b.HasOne("Sellius.API.Models.LicencaModel", "Licenca")
                        .WithMany()
                        .HasForeignKey("LicencaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_empresas_licencas_licenca_id");

                    b.Navigation("Cidade");

                    b.Navigation("Licenca");
                });

            modelBuilder.Entity("Sellius.API.Models.FornecedoresModel", b =>
                {
                    b.HasOne("Sellius.API.Models.CidadeModel", "Cidade")
                        .WithMany()
                        .HasForeignKey("CidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_fornecedores_cidades_cidade_id");

                    b.HasOne("Sellius.API.Models.EmpresaModel", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_fornecedores_empresas_empresa_id");

                    b.Navigation("Cidade");

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("Sellius.API.Models.LoginModel", b =>
                {
                    b.HasOne("Sellius.API.Models.EmpresaModel", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_logins_empresas_empresa_id");

                    b.HasOne("Sellius.API.Models.UsuarioModel", "Usuario")
                        .WithMany()
                        .HasForeignKey("usuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_logins_usuarios_usuario_id");

                    b.Navigation("Empresa");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Sellius.API.Models.PedidoModel", b =>
                {
                    b.HasOne("Sellius.API.Models.Cliente.ClienteModel", "Cliente")
                        .WithMany("Pedidos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_pedidos_clientes_cliente_id");

                    b.HasOne("Sellius.API.Models.EmpresaModel", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_pedidos_empresas_empresa_id");

                    b.HasOne("Sellius.API.Models.UsuarioModel", "Usuario")
                        .WithMany("Pedidos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_pedidos_usuarios_usuario_id");

                    b.Navigation("Cliente");

                    b.Navigation("Empresa");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Sellius.API.Models.PedidoXProduto", b =>
                {
                    b.HasOne("Sellius.API.Models.PedidoModel", "Pedido")
                        .WithMany("Produto")
                        .HasForeignKey("idPedido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_pedido_x_produtos_pedidos_id_pedido");

                    b.HasOne("Sellius.API.Models.ProdutoModel", "Produto")
                        .WithMany("pedidos")
                        .HasForeignKey("idProduto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_pedido_x_produtos_produtos_id_produto");

                    b.Navigation("Pedido");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Sellius.API.Models.ProdutoModel", b =>
                {
                    b.HasOne("Sellius.API.Models.EmpresaModel", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_produtos_empresas_empresa_id");

                    b.HasOne("Sellius.API.Models.FornecedoresModel", "Fornecedor")
                        .WithMany()
                        .HasForeignKey("FornecedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_produtos_fornecedores_fornecedor_id");

                    b.HasOne("Sellius.API.Models.TipoProdutoModel", "tipoProduto")
                        .WithMany("Produtos")
                        .HasForeignKey("TipoProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_produtos_tp_produtos_tipo_produto_id");

                    b.Navigation("Empresa");

                    b.Navigation("Fornecedor");

                    b.Navigation("tipoProduto");
                });

            modelBuilder.Entity("Sellius.API.Models.TipoProdutoModel", b =>
                {
                    b.HasOne("Sellius.API.Models.EmpresaModel", "Empresa")
                        .WithMany()
                        .HasForeignKey("Empresaid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_tp_produtos_empresas_empresaid");

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("Sellius.API.Models.UsuarioModel", b =>
                {
                    b.HasOne("Sellius.API.Models.CidadeModel", "Cidade")
                        .WithMany()
                        .HasForeignKey("CidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_usuarios_cidades_cidade_id");

                    b.HasOne("Sellius.API.Models.EmpresaModel", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_usuarios_empresas_empresa_id");

                    b.Navigation("Cidade");

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("Sellius.API.Models.Cliente.ClienteModel", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("Sellius.API.Models.EstadoModel", b =>
                {
                    b.Navigation("Cidade");
                });

            modelBuilder.Entity("Sellius.API.Models.PedidoModel", b =>
                {
                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Sellius.API.Models.ProdutoModel", b =>
                {
                    b.Navigation("pedidos");
                });

            modelBuilder.Entity("Sellius.API.Models.TipoProdutoModel", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("Sellius.API.Models.UsuarioModel", b =>
                {
                    b.Navigation("Pedidos");
                });
#pragma warning restore 612, 618
        }
    }
}
